#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Mar 11, 2019 10:32:47 AM GMT  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ozone_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    ozone_gui_support.set_Tk_var()
    top = Toplevel1 (root)
    ozone_gui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    ozone_gui_support.set_Tk_var()
    top = Toplevel1 (w)
    ozone_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("767x638+337+107")
        top.title("Ozone Editor")
        top.configure(background="#d9d9d9")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.05, rely=0.047, relheight=0.809
                , relwidth=0.9)
        self.TNotebook1.configure(width=614)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Instrument Names", compound="left"
                ,underline="-1", )
        self.TNotebook1_t0.configure(background="#d9d9d9")
        self.TNotebook1_t0.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t0.configure(highlightcolor="black")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Remove Dates", compound="left"
                ,underline="-1", )
        self.TNotebook1_t1.configure(background="#d9d9d9")
        self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t1.configure(highlightcolor="black")

        self.Entry1 = tk.Entry(self.TNotebook1_t0)
        self.Entry1.place(relx=0.492, rely=0.061,height=20, relwidth=0.433)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(textvariable=ozone_gui_support.date_add_instr)
        self.Entry1.configure(width=264)

        self.Entry2 = tk.Entry(self.TNotebook1_t0)
        self.Entry2.place(relx=0.492, rely=0.122,height=20, relwidth=0.433)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(textvariable=ozone_gui_support.primary_add_instr)
        self.Entry2.configure(width=264)

        self.Entry3 = tk.Entry(self.TNotebook1_t0)
        self.Entry3.place(relx=0.492, rely=0.184,height=20, relwidth=0.433)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(textvariable=ozone_gui_support.secondary_add_instr)
        self.Entry3.configure(width=264)

        self.Label1 = tk.Label(self.TNotebook1_t0)
        self.Label1.place(relx=0.41, rely=0.061, height=21, width=30)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Date''')

        self.Label2 = tk.Label(self.TNotebook1_t0)
        self.Label2.place(relx=0.295, rely=0.122, height=21, width=108)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Primary Instrument''')

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.279, rely=0.184, height=21, width=122)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Secondary Instrument''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.049, rely=0.061, height=24, width=87)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(command=ozone_gui_support.add_instr_name)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Add''')
        self.Button1.configure(width=87)

        self.Button2 = tk.Button(self.TNotebook1_t0)
        self.Button2.place(relx=0.902, rely=0.551, height=24, width=54)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(command=ozone_gui_support.remove_instr_name)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Remove''')

        self.Button3 = tk.Button(self.TNotebook1_t0)
        self.Button3.place(relx=0.361, rely=0.939, height=24, width=85)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(command=ozone_gui_support.save_instr_name)
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Save''')
        self.Button3.configure(width=85)

        self.style.configure('Treeview.Heading',  font="TkDefaultFont")
        self.treeview_instr_names = ScrolledTreeView(self.TNotebook1_t0)
        self.treeview_instr_names.place(relx=0.033, rely=0.265, relheight=0.667
                , relwidth=0.852)
        self.treeview_instr_names.configure(columns="Col1 Col2 Col3")
        self.treeview_instr_names.heading("#0",text="Tree")
        self.treeview_instr_names.heading("#0",anchor="center")
        self.treeview_instr_names.column("#0",width="0")
        self.treeview_instr_names.column("#0",minwidth="0")
        self.treeview_instr_names.column("#0",stretch="0")
        self.treeview_instr_names.column("#0",anchor="w")
        self.treeview_instr_names.heading("Col1",text="Date")
        self.treeview_instr_names.heading("Col1",anchor="center")
        self.treeview_instr_names.column("Col1",width="200")
        self.treeview_instr_names.column("Col1",minwidth="20")
        self.treeview_instr_names.column("Col1",stretch="1")
        self.treeview_instr_names.column("Col1",anchor="w")
        self.treeview_instr_names.heading("Col2",text="Primary Instrument")
        self.treeview_instr_names.heading("Col2",anchor="center")
        self.treeview_instr_names.column("Col2",width="150")
        self.treeview_instr_names.column("Col2",minwidth="20")
        self.treeview_instr_names.column("Col2",stretch="1")
        self.treeview_instr_names.column("Col2",anchor="w")
        self.treeview_instr_names.heading("Col3",text="Secondary Instrument")
        self.treeview_instr_names.heading("Col3",anchor="center")
        self.treeview_instr_names.column("Col3",width="150")
        self.treeview_instr_names.column("Col3",minwidth="20")
        self.treeview_instr_names.column("Col3",stretch="1")
        self.treeview_instr_names.column("Col3",anchor="w")

        self.Entry4 = tk.Entry(self.TNotebook1_t1)
        self.Entry4.place(relx=0.492, rely=0.041,height=20, relwidth=0.433)
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(textvariable=ozone_gui_support.start_remove_dates)
        self.Entry4.configure(width=264)

        self.Entry5 = tk.Entry(self.TNotebook1_t1)
        self.Entry5.place(relx=0.492, rely=0.102,height=20, relwidth=0.433)
        self.Entry5.configure(background="white")
        self.Entry5.configure(disabledforeground="#a3a3a3")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(foreground="#000000")
        self.Entry5.configure(insertbackground="black")
        self.Entry5.configure(textvariable=ozone_gui_support.end_remove_dates)
        self.Entry5.configure(width=264)

        self.Entry6 = tk.Entry(self.TNotebook1_t1)
        self.Entry6.place(relx=0.492, rely=0.163,height=20, relwidth=0.433)
        self.Entry6.configure(background="white")
        self.Entry6.configure(disabledforeground="#a3a3a3")
        self.Entry6.configure(font="TkFixedFont")
        self.Entry6.configure(foreground="#000000")
        self.Entry6.configure(insertbackground="black")
        self.Entry6.configure(textvariable=ozone_gui_support.reason_remove_dates)
        self.Entry6.configure(width=264)

        self.Label4 = tk.Label(self.TNotebook1_t1)
        self.Label4.place(relx=0.377, rely=0.041, height=21, width=62)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Starts Date''')

        self.Label5 = tk.Label(self.TNotebook1_t1)
        self.Label5.place(relx=0.393, rely=0.102, height=21, width=54)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''End Date''')
        self.Label5.configure(width=54)

        self.Label6 = tk.Label(self.TNotebook1_t1)
        self.Label6.place(relx=0.393, rely=0.163, height=21, width=54)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Reason''')
        self.Label6.configure(width=54)

        self.Button4 = tk.Button(self.TNotebook1_t1)
        self.Button4.place(relx=0.049, rely=0.041, height=24, width=97)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(command=ozone_gui_support.add_remove_dates)
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Add''')
        self.Button4.configure(width=97)

        self.Button5 = tk.Button(self.TNotebook1_t1)
        self.Button5.place(relx=0.852, rely=0.49, height=24, width=54)
        self.Button5.configure(activebackground="#d9d9d9")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(command=ozone_gui_support.remove_remove_dates)
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Remove''')

        self.Button6 = tk.Button(self.TNotebook1_t1)
        self.Button6.place(relx=0.377, rely=0.939, height=24, width=75)
        self.Button6.configure(activebackground="#d9d9d9")
        self.Button6.configure(activeforeground="#000000")
        self.Button6.configure(background="#d9d9d9")
        self.Button6.configure(command=ozone_gui_support.save_remove_dates)
        self.Button6.configure(disabledforeground="#a3a3a3")
        self.Button6.configure(foreground="#000000")
        self.Button6.configure(highlightbackground="#d9d9d9")
        self.Button6.configure(highlightcolor="black")
        self.Button6.configure(pady="0")
        self.Button6.configure(text='''Save''')
        self.Button6.configure(width=75)

        self.treeview_remove_dates = ScrolledTreeView(self.TNotebook1_t1)
        self.treeview_remove_dates.place(relx=0.016, rely=0.23, relheight=0.7
                , relwidth=0.82)
        self.treeview_remove_dates.configure(columns="Col1 Col2 Col3")
        self.treeview_remove_dates.heading("#0",text="Tree")
        self.treeview_remove_dates.heading("#0",anchor="center")
        self.treeview_remove_dates.column("#0",width="0")
        self.treeview_remove_dates.column("#0",minwidth="0")
        self.treeview_remove_dates.column("#0",stretch="0")
        self.treeview_remove_dates.column("#0",anchor="w")
        self.treeview_remove_dates.heading("Col1",text="Start Date")
        self.treeview_remove_dates.heading("Col1",anchor="center")
        self.treeview_remove_dates.column("Col1",width="160")
        self.treeview_remove_dates.column("Col1",minwidth="20")
        self.treeview_remove_dates.column("Col1",stretch="1")
        self.treeview_remove_dates.column("Col1",anchor="w")
        self.treeview_remove_dates.heading("Col2",text="End Date")
        self.treeview_remove_dates.heading("Col2",anchor="center")
        self.treeview_remove_dates.column("Col2",width="160")
        self.treeview_remove_dates.column("Col2",minwidth="20")
        self.treeview_remove_dates.column("Col2",stretch="1")
        self.treeview_remove_dates.column("Col2",anchor="w")
        self.treeview_remove_dates.heading("Col3",text="Reason")
        self.treeview_remove_dates.heading("Col3",anchor="center")
        self.treeview_remove_dates.column("Col3",width="250")
        self.treeview_remove_dates.column("Col3",minwidth="20")
        self.treeview_remove_dates.column("Col3",stretch="1")
        self.treeview_remove_dates.column("Col3",anchor="w")

        self.Button7 = tk.Button(top)
        self.Button7.place(relx=0.443, rely=0.909, height=24, width=42)
        self.Button7.configure(activebackground="#d9d9d9")
        self.Button7.configure(activeforeground="#000000")
        self.Button7.configure(background="#d9d9d9")
        self.Button7.configure(command=ozone_gui_support.finish)
        self.Button7.configure(disabledforeground="#a3a3a3")
        self.Button7.configure(foreground="#000000")
        self.Button7.configure(highlightbackground="#d9d9d9")
        self.Button7.configure(highlightcolor="black")
        self.Button7.configure(pady="0")
        self.Button7.configure(text='''Finish''')

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        else:
            methods = tk.Pack.__dict__.keys() + tk.Grid.__dict__.keys() \
                  + tk.Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')

if __name__ == '__main__':
    vp_start_gui()





